---
title: "03_AddHabitat"
format: html
editor: visual
---

# Add extracted habitat data to environmental data

In this script:

Add the standardized vegetation and elevation values for each survey point (site) to the rest of the environmental data frame.

Standardise numerical predictors by 2 standard deviations

## Clear workspace

```{r}
# Clean your workspace to reset your R environment
rm( list = ls() )
# Check that you are in the right project folder
getwd()
```

## Library

```{r}
library(dplyr)
library(tidyr)
```

## Import data

```{r}
all.obs <- read.csv("E:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/all_obs_17Oct23.csv") 
all.env <- read.csv("E:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/all_env_17Oct23.csv") 
veg.std <- read.csv("E:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/final_standardized_df.csv")
```

### Standardize environmental point/site data

```{r}
# function to standardize:

#genetic function to standardise covariates using Gelman's suggestion:
standardise <- function( xmat, stdevs = 2, marg = c( 1, 2) ) { 
  mean.xmat = mean( as.vector( xmat ), na.rm = TRUE )
  sd.xmat = sd( as.vector( xmat ), na.rm = TRUE ) 
  std.xmat = apply( xmat, marg, function( x ){
    ( x - mean.xmat ) / (stdevs * sd.xmat ) } )
  return( std.xmat )
}


# pull out covs to be standardized and then will put them back in the dataframe

wind.std <- as.matrix(all.env[,c(9)])
jul.std <- as.matrix(all.env[,c(13)])
min.std <- as.matrix(all.env[,c(14)])


wind.std <- standardise(wind.std)
jul.std <- standardise(jul.std)
min.std <- standardise(min.std)

# put back into data frame and rename
wind.std <- as.data.frame(wind.std)
colnames(wind.std) <- "wind"

jul.std <- as.data.frame(jul.std)
colnames(jul.std) <- "julian"

min.std <- as.data.frame(min.std)
colnames(min.std) <- "min_after_sun"

# replicate the data frame then replace corresponding columsn with standardized values

all.env.std <- all.env


all.env.std[,9] <- wind.std
all.env.std[,13] <- jul.std
all.env.std[,14] <- min.std

```

## Combine dataframes

```{r}

# join obs and env
obs.env.std <- left_join(all.obs, all.env.std, by = 'id')

# change column name so can join veg data
colnames(veg.std)[colnames(veg.std) == "site_id"] <- "id"

# join veg data by site id
obs.env.veg.std <- left_join(obs.env.std, veg.std, by = 'id')

#remove extra/unnecessary columns
all.std <- obs.env.veg.std[,-c(1, 12, 25:26)]

#rename year column
colnames(all.std)[colnames(all.std) == "year.x"] <- "year"

# export
write.csv(all.std, "E:/gyrf_analysis/MSgyrfalcon/all_std.csv")
```
